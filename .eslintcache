[{"C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\index.js":"1","C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\App.js":"2","C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\reportWebVitals.js":"3","C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\components\\SearchBox\\SearchBox.js":"4","C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\components\\NominationsBox\\NominationsBox.js":"5","C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\components\\ResultsBox\\ResultsBox.js":"6"},{"size":488,"mtime":1609957523909,"results":"7","hashOfConfig":"8"},{"size":1953,"mtime":1610085289499,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":511,"mtime":1609966380716,"results":"11","hashOfConfig":"12"},{"size":2750,"mtime":1610085050049,"results":"13","hashOfConfig":"8"},{"size":4925,"mtime":1610084957405,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"kt8gtb",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16y0bwx",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},"C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\index.js",[],["29","30"],"C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\App.js",[],"C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\reportWebVitals.js",[],"C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\components\\SearchBox\\SearchBox.js",["31","32"],"C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\components\\NominationsBox\\NominationsBox.js",[],"C:\\Users\\Michael Olshewski\\Desktop\\Development\\GitHub\\shopify-intern-challenge\\src\\components\\ResultsBox\\ResultsBox.js",["33"],"import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst ResultsBox = (props) => {\r\n    let moviesArr;\r\n\r\n    if (!props) {\r\n        toast.error('There was an error, Please try again!');\r\n    } else {\r\n        moviesArr = props.movies;\r\n    }\r\n\r\n    let nominatedMovies = [];\r\n\r\n    const [moviesArray, setMoviesArray] = useState([]);\r\n\r\n    const saveToLocalStorage = (e) => {\r\n        const movieName =\r\n            e.target.parentElement.getAttribute('data-movie') +\r\n            ' (' +\r\n            e.target.parentElement.getAttribute('data-year') +\r\n            ')';\r\n\r\n        movieName.split(',');\r\n\r\n        if (nominatedMovies.length >= 5) {\r\n            toast.warn(\r\n                'You have used all five (5) of your votes for The Shoppies!'\r\n            );\r\n        } else {\r\n            if (!movieName) {\r\n                toast.error('Movie cannot be empty');\r\n            } else {\r\n                nominatedMovies.push(movieName);\r\n                localStorage.setItem(\r\n                    'savedMovies',\r\n                    JSON.stringify(nominatedMovies)\r\n                );\r\n                toast.success(\r\n                    'You have nominated ' + movieName + ' for The Shoppies!'\r\n                );\r\n            }\r\n        }\r\n        setMoviesArray(moviesArr);\r\n    };\r\n\r\n    const getLocalStorage = () => {\r\n        nominatedMovies = JSON.parse(\r\n            localStorage.getItem('savedMovies') || '[]'\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getLocalStorage();\r\n    });\r\n\r\n    setInterval(function () {\r\n        if (moviesArr === JSON.parse(localStorage.getItem('savedMovies'))) {\r\n            clearInterval();\r\n        } else {\r\n            setMoviesArray(\r\n                JSON.parse(localStorage.getItem('savedMovies') || '[]')\r\n            );\r\n        }\r\n    }, 1000);\r\n\r\n    return (\r\n        <div className='card'>\r\n            <h3>Results for \"{props.searchQuery}\"</h3>\r\n            <h6>Please nominate up to five (5) films</h6>\r\n            <ul className='resultsList'>\r\n                {moviesArr\r\n                    ? moviesArr.map((movie, index) => {\r\n                          index = index + 1;\r\n                          let movieString =\r\n                              movie.Title + ' (' + movie.Year + ')';\r\n\r\n                          if (\r\n                              localStorage\r\n                                  .getItem('savedMovies')\r\n                                  .includes(movieString)\r\n                          ) {\r\n                              return (\r\n                                  <li\r\n                                      key={index}\r\n                                      data-movie={movie.Title}\r\n                                      data-year={movie.Year}\r\n                                      data-index={index}\r\n                                  >\r\n                                      {movie.Title + ' (' + movie.Year + ')'}\r\n                                      <button\r\n                                          data-movie={movie.Title}\r\n                                          data-year={movie.Year}\r\n                                          className='btn btn-outline-primary'\r\n                                          onClick={saveToLocalStorage}\r\n                                          id={index}\r\n                                          disabled\r\n                                      >\r\n                                          Nominate\r\n                                      </button>\r\n                                  </li>\r\n                              );\r\n                          } else {\r\n                              return (\r\n                                  <li\r\n                                      key={index}\r\n                                      data-movie={movie.Title}\r\n                                      data-year={movie.Year}\r\n                                      data-index={index}\r\n                                  >\r\n                                      {movie.Title + ' (' + movie.Year + ')'}\r\n                                      <button\r\n                                          data-movie={movie.Title}\r\n                                          data-year={movie.Year}\r\n                                          className='btn btn-outline-primary'\r\n                                          onClick={saveToLocalStorage}\r\n                                          id={index}\r\n                                      >\r\n                                          Nominate\r\n                                      </button>\r\n                                  </li>\r\n                              );\r\n                          }\r\n                      })\r\n                    : 'Please search for a movie!'}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultsBox;\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":13},{"ruleId":"38","severity":1,"message":"42","line":5,"column":7,"nodeType":"40","messageId":"41","endLine":5,"endColumn":13},{"ruleId":"38","severity":1,"message":"43","line":16,"column":12,"nodeType":"40","messageId":"41","endLine":16,"endColumn":23},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'apiKey' is assigned a value but never used.","'moviesArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]